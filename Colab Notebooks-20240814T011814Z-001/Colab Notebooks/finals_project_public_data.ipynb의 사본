{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1a-HJvIcr7K45b2bLjhqWSLyzzIcH1q5u","timestamp":1717502531763}],"mount_file_id":"19rzQdR0ZdrFOfehCuFUYWpXAgdo_OhZo","authorship_tag":"ABX9TyOB3lxuSBppJENkUbDQwJH3"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["서울시 열린데이터 광장 홈페이지(https://data.seoul.go.kr) 에는 서울시 지하철호선별 역별 승하차 인원 정보’에 대한 데이터가 존재한다.\n","\n","이 중 2022년 데이터에 대해서 아래의 결과를 제출하시오."],"metadata":{"id":"LTUmgXdVFKub"}},{"cell_type":"markdown","source":["A. 2022/03/14 1~8호선 승차총승객수와 하차총승객수의 호선별 비율을 계산하고, 각각\n","파이 차트를 그려서 제출하시오."],"metadata":{"id":"IK-MLWhRFQ3a"}},{"cell_type":"code","execution_count":4,"metadata":{"id":"Jk0RnfBsVzoQ","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1717502817591,"user_tz":-540,"elapsed":1728,"user":{"displayName":"김민경","userId":"05552883468747004724"}},"outputId":"478fd936-684f-4696-b948-7114f03362c5"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["         사용일자  노선명    역명  승차총승객수    하차총승객수  등록일자\n","20220101  3호선   수서  7370    7076  20220104   NaN\n","20220101  3호선  학여울   461     473  20220104   NaN\n","20220101  3호선   대청  3224    2903  20220104   NaN\n","20220101  3호선   일원  3321    2803  20220104   NaN\n","20220101  경원선   창동     1       0  20220104   NaN"],"text/html":["\n","  <div id=\"df-25e6e866-f8e1-489a-8fee-3679fbf04efe\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>사용일자</th>\n","      <th>노선명</th>\n","      <th>역명</th>\n","      <th>승차총승객수</th>\n","      <th>하차총승객수</th>\n","      <th>등록일자</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>20220101</th>\n","      <td>3호선</td>\n","      <td>수서</td>\n","      <td>7370</td>\n","      <td>7076</td>\n","      <td>20220104</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>20220101</th>\n","      <td>3호선</td>\n","      <td>학여울</td>\n","      <td>461</td>\n","      <td>473</td>\n","      <td>20220104</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>20220101</th>\n","      <td>3호선</td>\n","      <td>대청</td>\n","      <td>3224</td>\n","      <td>2903</td>\n","      <td>20220104</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>20220101</th>\n","      <td>3호선</td>\n","      <td>일원</td>\n","      <td>3321</td>\n","      <td>2803</td>\n","      <td>20220104</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>20220101</th>\n","      <td>경원선</td>\n","      <td>창동</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>20220104</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-25e6e866-f8e1-489a-8fee-3679fbf04efe')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-25e6e866-f8e1-489a-8fee-3679fbf04efe button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-25e6e866-f8e1-489a-8fee-3679fbf04efe');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4a1050d8-4f2d-45da-a6ae-c40616a0a886\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4a1050d8-4f2d-45da-a6ae-c40616a0a886')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4a1050d8-4f2d-45da-a6ae-c40616a0a886 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":4}],"source":["import pandas as pd\n","import matplotlib.pyplot as plt\n","dir='/content/drive/MyDrive/2024_University_Courses/전공파/finals_project/CARD_SUBWAY_MONTH_2022.csv'\n","df = pd.read_csv(dir,encoding='cp949')\n","df.head()\n"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"id":"aWEndfcZI7_f"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["B. 2022/01/01 ~ 2022/06/30 까지 승차총승객수가 가장 많은 호선을 구하고, 해당 호선\n","에 대한 월별 평균 승차총승객수의 막대 그래프를 그려서 제출하시오. (x축 : 월, y축\n","월별 평균 승차총승객수)"],"metadata":{"id":"L_dQBw8eFfAH"}},{"cell_type":"code","source":[],"metadata":{"id":"0qHslcCoFdNa"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["C. 2022/05/21 ~ 2022/05/30 까지 하차총승객수의 평균이 가장 큰 역을 구하고, 해당\n","역의 일별 하차총승객수 변화에 대한 plot을 그려서 제출하시오. (x축 : 날짜, y축 : 일\n","별 하차총승객수) 단, 환승역의 경우 하나의 역으로 계산하시오. (예: 서울역)"],"metadata":{"id":"30PIgi6JFhaS"}},{"cell_type":"code","source":[],"metadata":{"id":"qcSoqrtOFhrf"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["D. 2022/10/01 ~ 2022/10/31 까지 하차총승객수의 표준편차가 가장 큰 역을 구하고,\n","subplots을 사용하여 해당 역의 일별 승차총승객수와 하차총승객수의 변화에 대한\n","plot을 그래서 제출하시오. (x축 : 날짜, y축 : 일별 승/하차총승객수) 단, 환승역의 경\n","우 하나의 역으로 계산하시오. (예: 서울역)"],"metadata":{"id":"oQSBsbFjFjb6"}},{"cell_type":"code","source":[],"metadata":{"id":"jJV0FekrFjsB"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["E. 2022/04/01 ~ 2022/04/30 까지 승차총승객수 상위 5개 호선 대한 수평 막대 그래프\n","를 그려서 제출하시오. (x축 : 승차총승객수, y축 : 호선)"],"metadata":{"id":"cG965BRbFqtu"}},{"cell_type":"markdown","source":["서울시 열린데이터 광장 홈페이지(https://data.seoul.go.kr) 에는 ‘서울시 지하철호선별 역별\n","승하차 인원 정보’에 대한 데이터가 존재한다. 이 중 2022년 데이터에 대해서 아래의 결\n","과를 제출하시오.\n"],"metadata":{"id":"U2irkFziF5xO"}},{"cell_type":"markdown","source":["A. 2022/03/14 1~8호선 승차총승객수와 하차총승객수의 호선별 비율을 계산하고, 각각\n","파이 차트를 그려서 제출하시오.\n"],"metadata":{"id":"bv3gKrqBF7uW"}},{"cell_type":"code","source":[],"metadata":{"id":"5W8JCfTqFq_h"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["B. 2022/01/01 ~ 2022/06/30 까지 승차총승객수가 가장 많은 호선을 구하고, 해당 호선\n","에 대한 월별 평균 승차총승객수의 막대 그래프를 그려서 제출하시오. (x축 : 월, y축\n","월별 평균 승차총승객수)\n"],"metadata":{"id":"nK2c6L2VF9Jg"}},{"cell_type":"markdown","source":["C. 2022/05/21 ~ 2022/05/30 까지 하차총승객수의 평균이 가장 큰 역을 구하고, 해당\n","역의 일별 하차총승객수 변화에 대한 plot을 그려서 제출하시오. (x축 : 날짜, y축 : 일\n","별 하차총승객수) 단, 환승역의 경우 하나의 역으로 계산하시오. (예: 서울역)\n"],"metadata":{"id":"b9vE_VXzF-kp"}},{"cell_type":"markdown","source":["D. 2022/10/01 ~ 2022/10/31 까지 하차총승객수의 표준편차가 가장 큰 역을 구하고,\n","subplots을 사용하여 해당 역의 일별 승차총승객수와 하차총승객수의 변화에 대한\n","plot을 그래서 제출하시오. (x축 : 날짜, y축 : 일별 승/하차총승객수) 단, 환승역의 경\n","우 하나의 역으로 계산하시오. (예: 서울역)\n"],"metadata":{"id":"6y0MpVLOF_6b"}},{"cell_type":"markdown","source":["E. 2022/04/01 ~ 2022/04/30 까지 승차총승객수 상위 5개 호선 대한 수평 막대 그래프\n","를 그려서 제출하시오. (x축 : 승차총승객수, y축 : 호선)"],"metadata":{"id":"UbyyJAJ4GBCn"}},{"cell_type":"code","source":[],"metadata":{"id":"lXcohlOkGB5l"},"execution_count":null,"outputs":[]}]}