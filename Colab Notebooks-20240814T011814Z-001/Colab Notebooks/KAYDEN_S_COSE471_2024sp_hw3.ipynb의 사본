{"cells":[{"cell_type":"markdown","metadata":{"id":"uchZsTUr-c9r"},"source":["# HW 3: Spam/Ham Classification\n","## Due Date: 5/13 (Mon), 11:59 PM\n","\n","**Collaboration Policy**\n","\n","Data science is a collaborative activity. While you may talk with others about\n","the project, we ask that you **write your solutions individually**. If you do\n","discuss the assignments with others please **include their names** at the top\n","of your notebook."]},{"cell_type":"markdown","metadata":{"id":"BZm3TdH3-c9s"},"source":["**Collaborators**: Sejuti Mannan, Minkyung Kim"]},{"cell_type":"markdown","metadata":{"id":"npb43RFZ-c9s"},"source":["## This Assignment\n","In this homework, you will use what you've learned in class to create a classifier that can distinguish spam (junk or commercial or bulk) emails from ham (non-spam) emails. In addition to providing some skeleton code to fill in, we will evaluate your work based on your model's accuracy and your written responses in this notebook.\n","\n","After this homework, you should feel comfortable with the following:\n","\n","- Part 1: Feature engineering with text data\n","- Part 2: Using sklearn libraries to process data and fit models\n","- Part 3: Validating the performance of your model and minimizing overfitting\n","- Part 3: Generating and analyzing precision-recall curves\n","\n","## <span style=\"color:red\">Warning!</span>\n","We've tried our best to filter the data for anything blatantly offensive as best as we can, but unfortunately there may still be some examples you may find in poor taste. If you encounter these examples and believe it is inappropriate for students, please let a TA know and we will try to remove it for future semesters. Thanks for your understanding!"]},{"cell_type":"markdown","metadata":{"id":"zyVLHHS3-c9t"},"source":["## Score Breakdown\n","Question | Points\n","--- | ---\n","1a | 2\n","1b | 2\n","1c | 2\n","2 | 3\n","3 | 3\n","4 | 3\n","5 | 3\n","6a | 3\n","6b | 3\n","6c | 3\n","6d | 3\n","7 | 4\n","8 | 4\n","Total | 38"]},{"cell_type":"markdown","metadata":{"id":"lGGE7QCC-c9t"},"source":["# Part I - Initial Analysis"]},{"cell_type":"code","execution_count":1,"metadata":{"id":"-O2DiZBt-c9t","executionInfo":{"status":"ok","timestamp":1716297381182,"user_tz":-540,"elapsed":2298,"user":{"displayName":"김민경","userId":"05552883468747004724"}}},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","\n","import seaborn as sns\n","sns.set(style = \"whitegrid\",\n","        color_codes = True,\n","        font_scale = 1.5)\n","\n","class bcolor:\n","   BLACK = '\\033[40m'\n","   YELLOW = '\\033[93m'\n","   RED = '\\033[91m'\n","   BOLD = '\\033[1m'\n","   END = '\\033[0m'\n","\n","def print_passed(str_in):\n","  print(bcolor.BLACK + bcolor.YELLOW + bcolor.BOLD + str_in + bcolor.END)"]},{"cell_type":"markdown","metadata":{"id":"tOKYwC_X_Tom"},"source":["## Mount your Google Drive\n","When you run a code cell, Colab executes it on a temporary cloud instance.  Every time you open the notebook, you will be assigned a different machine.  All compute state and files saved on the previous machine will be lost.  Therefore, you may need to re-download datasets or rerun code after a reset. Here, you can mount your Google drive to the temporary cloud instance's local filesystem using the following code snippet and save files under the specified directory (note that you will have to provide permission every time you run this)."]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JpuWdTnn_QUH","outputId":"84868cc5-ab7b-4029-a925-3f33dede9e7a","executionInfo":{"status":"ok","timestamp":1716297408296,"user_tz":-540,"elapsed":27125,"user":{"displayName":"김민경","userId":"05552883468747004724"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n","\n","Number of Google drive files in /content/drive/My Drive/:\n","27\n","\n","Current directory:\n","/content\n"]}],"source":["# mount Google drive\n","from google.colab import drive\n","drive.mount('/content/drive')\n","\n","# now you can see files\n","!echo -e \"\\nNumber of Google drive files in /content/drive/My Drive/:\"\n","!ls -l \"/content/drive/My Drive/\" | wc -l\n","# by the way, you can run any linux command by putting a ! at the start of the line\n","\n","# by default everything gets executed and saved in /content/\n","!echo -e \"\\nCurrent directory:\"\n","!pwd"]},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"phWTu0ph_nhP","outputId":"9924144f-1b83-4e4c-cbc3-8526fa2838c0","executionInfo":{"status":"ok","timestamp":1716297408297,"user_tz":-540,"elapsed":16,"user":{"displayName":"김민경","userId":"05552883468747004724"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Current Workspace: /content/drive/MyDrive/2024_University_Courses/IntrotoDataScience/COSE471_2024sp_hw3\n"]}],"source":["workspace_path = '/content/drive/MyDrive/2024_University_Courses/IntrotoDataScience/COSE471_2024sp_hw3'  # Change this path!\n","print(f'Current Workspace: {workspace_path}')"]},{"cell_type":"markdown","metadata":{"id":"7Y2hj5A8-c9u"},"source":["### Loading in the Data\n","\n","Our goal is to classify emails as spam or not spam (referred to as \"ham\") using features generated from the text in the email.\n","\n","The dataset consists of email messages and their labels (0 for ham, 1 for spam). Your labeled training dataset contains 8348 labeled examples, and the test set contains 1000 unlabeled examples.\n","\n","Run the following cells to load in the data into DataFrames.\n","\n","The `train` DataFrame contains labeled data that you will use to train your model. It contains four columns:\n","\n","1. `id`: An identifier for the training example\n","1. `subject`: The subject of the email\n","1. `email`: The text of the email\n","1. `spam`: 1 if the email is spam, 0 if the email is ham (not spam)\n","\n","The `test` DataFrame contains 1000 unlabeled emails. You will predict labels for these emails and submit your predictions to Kaggle for evaluation."]},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":275},"id":"ybZYxrch-c9u","outputId":"ceebb628-fdf1-4b74-e411-9036f3f0b3b4","executionInfo":{"status":"ok","timestamp":1716297413702,"user_tz":-540,"elapsed":5413,"user":{"displayName":"김민경","userId":"05552883468747004724"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   id                                            subject  \\\n","0   0  Subject: A&L Daily to be auctioned in bankrupt...   \n","1   1  Subject: Wired: \"Stronger ties between ISPs an...   \n","2   2  Subject: It's just too small                  ...   \n","3   3                      Subject: liberal defnitions\\n   \n","4   4  Subject: RE: [ILUG] Newbie seeks advice - Suse...   \n","\n","                                               email  spam  \n","0  url: http://boingboing.net/#85534171\\n date: n...     0  \n","1  url: http://scriptingnews.userland.com/backiss...     0  \n","2  <html>\\n <head>\\n </head>\\n <body>\\n <font siz...     1  \n","3  depends on how much over spending vs. how much...     0  \n","4  hehe sorry but if you hit caps lock twice the ...     0  "],"text/html":["\n","  <div id=\"df-d4b543a4-296c-4d7e-91a4-03be6dd51f54\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>subject</th>\n","      <th>email</th>\n","      <th>spam</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>Subject: A&amp;L Daily to be auctioned in bankrupt...</td>\n","      <td>url: http://boingboing.net/#85534171\\n date: n...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>Subject: Wired: \"Stronger ties between ISPs an...</td>\n","      <td>url: http://scriptingnews.userland.com/backiss...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>Subject: It's just too small                  ...</td>\n","      <td>&lt;html&gt;\\n &lt;head&gt;\\n &lt;/head&gt;\\n &lt;body&gt;\\n &lt;font siz...</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>Subject: liberal defnitions\\n</td>\n","      <td>depends on how much over spending vs. how much...</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>Subject: RE: [ILUG] Newbie seeks advice - Suse...</td>\n","      <td>hehe sorry but if you hit caps lock twice the ...</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d4b543a4-296c-4d7e-91a4-03be6dd51f54')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d4b543a4-296c-4d7e-91a4-03be6dd51f54 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d4b543a4-296c-4d7e-91a4-03be6dd51f54');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ab65741b-f1c1-4790-9c06-e89ad7930c4a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ab65741b-f1c1-4790-9c06-e89ad7930c4a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ab65741b-f1c1-4790-9c06-e89ad7930c4a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"original_training_data","summary":"{\n  \"name\": \"original_training_data\",\n  \"rows\": 8348,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2410,\n        \"min\": 0,\n        \"max\": 8347,\n        \"num_unique_values\": 8348,\n        \"samples\": [\n          6475,\n          4559,\n          7977\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"subject\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4134,\n        \"samples\": [\n          \"Subject: Fw: PROTECT YOUR COMPUTER,YOU NEED SYSTEMWORKS!DGYWAOG\\n\",\n          \"Subject: Re: [ILUG] Linux Install\\n\",\n          \"Subject: We Buy Renewal Commissions\\n\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"email\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5771,\n        \"samples\": [\n          \"\\n rick moen <rick@linuxmafia.com> a crit:\\n \\n > you'll probably want to buy a retail boxed set,\\n > e.g., via mail order.\\n \\n > the only editions of suse for i386 that are lawful\\n > to duplicate and redistribute are as follows:\\n \\n \\n i'm confused. i thought it was gpl'ed and\\n that the money you paid suse was for your\\n 60 day support or whatever? \\n \\n i don't particularly need support, so i'm not \\n really interested in purchasing a set of disks \\n with 4 billion apps which i'll never use.\\n \\n > i'm assuming in the above that you're talking about\\n > an i386-architecture computer. \\n \\n \\n yes, thanks for your input. anyway, i've a friend\\n with 7.3 pro, so i'll just ask him.\\n \\n \\n \\n paul...\\n \\n \\n > rick moen\\n \\n \\n \\n ___________________________________________________________\\n do you yahoo!? -- une adresse @yahoo.fr gratuite et en franais !\\n yahoo! mail : http://fr.mail.yahoo.com\\n \\n -- \\n irish linux users' group: ilug@linux.ie\\n http://www.linux.ie/mailman/listinfo/ilug for (un)subscription information.\\n list maintainer: listmaster@linux.ie\\n \\n \\n\",\n          \"url: http://www.newsisfree.com/click/-2,8670380,215/\\n date: 2002-10-08t14:51:59+01:00\\n \\n *business:* illness and city's mailing of sports empire share are blamed for \\n death.\\n \\n \\n\",\n          \"on fri, aug 16, 2002 at 07:58:07pm +0200, torsten bronger wrote:\\n > if i create an rpm according to one of the how-to's with having red\\n > hat in mind, how big are my chances that it will also work for the\\n > suse distribution, or others?  (i don't know how many base on the rpm\\n > system.)\\n > or what must i pay attention to when creating an rpm that should work\\n > with the big distributions?\\n \\n note also that there's hope of rpm being used on other systems than\\n linux.\\n look at\\n http://www-1.ibm.com/servers/aix/products/aixos/linux/download.html\\n \\n i think a good way to guess is to look at others' spec files, hardcode\\n as little as possible, replace abolute paths and commands with macros\\n if possible and accept and request patches and suggestions :)\\n \\n -- \\n designing in c, i find myself utilizing the harley davidson design\\n principle: \\\"if it breaks, make it bigger. if it sticks out, chrome it!\\\" :-)\\n \\t\\t-- marin david condic, comp.lang.ada\\n \\n \\n _______________________________________________\\n rpm-list mailing list <rpm-list@freshrpms.net>\\n http://lists.freshrpms.net/mailman/listinfo/rpm-list\\n \\n\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"spam\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}],"source":["original_training_data = pd.read_csv(f'{workspace_path}/train.csv')\n","test = pd.read_csv(f'{workspace_path}/test.csv')\n","\n","# Convert the emails to lower case as a first step to processing the text\n","original_training_data['email'] = original_training_data['email'].str.lower()\n","test['email'] = test['email'].str.lower()\n","\n","original_training_data.head()"]},{"cell_type":"markdown","metadata":{"id":"LYeMW2mz-c9v"},"source":["### Question 1a\n","First, let's check if our data contains any missing values.\n","\n","- Step1: Fill in the cell below to print the number of NaN values in each column. **Hint**: [pandas.isnull](https://pandas.pydata.org/docs/reference/api/pandas.isnull.html)\n","- Step2: If there are NaN values, replace them with appropriate filler values (i.e., NaN values in the `subject` or `email` columns should be replaced with empty strings).\n","- Step3: Print the number of NaN values in each column after this modification to verify that there are no NaN values left.\n","\n","<!--\n","BEGIN QUESTION\n","name: q1a\n","points: 1\n","-->"]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vREZl_jS-c9v","outputId":"2b283e37-5765-40da-b67c-830fa6f4b305","executionInfo":{"status":"ok","timestamp":1716297413704,"user_tz":-540,"elapsed":116,"user":{"displayName":"김민경","userId":"05552883468747004724"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Before imputation:\n","id         0\n","subject    6\n","email      0\n","spam       0\n","dtype: int64\n","------------\n","After imputation:\n","id         0\n","subject    0\n","email      0\n","spam       0\n","dtype: int64\n"]}],"source":["# BEGIN YOUR CODE\n","# -----------------------\n","print('Before imputation:')\n","print(original_training_data.isnull().sum())\n","original_training_data.fillna('', inplace=True)\n","print('------------')\n","print('After imputation:')\n","print(original_training_data.isnull().sum())\n","#...\n","# -----------------------\n","# END YOUR CODE"]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vghjI4WO-c9v","outputId":"4efaa4c1-723d-4338-8598-a0d82b072c3e","executionInfo":{"status":"ok","timestamp":1716297413705,"user_tz":-540,"elapsed":94,"user":{"displayName":"김민경","userId":"05552883468747004724"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[40m\u001b[93m\u001b[1mQ1a: Passed all unit tests!\u001b[0m\n"]}],"source":["assert original_training_data.isnull().sum().sum() == 0\n","print_passed('Q1a: Passed all unit tests!')"]},{"cell_type":"markdown","metadata":{"id":"hDyNrsW0-c9v"},"source":["### Question 1b\n","\n","In the cell below, print the text of the first ham (i.e. 1st row) and the first spam email in the original training set.\n","\n","<!--\n","BEGIN QUESTION\n","name: q1b\n","points: 1\n","-->"]},{"cell_type":"code","execution_count":7,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gRB6X5hP-c9w","outputId":"ed7ee7e6-8ecf-453e-c1bd-f4391fb8ef70","executionInfo":{"status":"ok","timestamp":1716297413706,"user_tz":-540,"elapsed":75,"user":{"displayName":"김민경","userId":"05552883468747004724"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["The text of the first Ham:\n","------------\n","url: http://boingboing.net/#85534171\n"," date: not supplied\n"," \n"," arts and letters daily, a wonderful and dense blog, has folded up its tent due \n"," to the bankruptcy of its parent company. a&l daily will be auctioned off by the \n"," receivers. link[1] discuss[2] (_thanks, misha!_)\n"," \n"," [1] http://www.aldaily.com/\n"," [2] http://www.quicktopic.com/boing/h/zlfterjnd6jf\n"," \n"," \n","\n","The text of the first Spam:\n","------------\n","<html>\n"," <head>\n"," </head>\n"," <body>\n"," <font size=3d\"4\"><b> a man endowed with a 7-8\" hammer is simply<br>\n","  better equipped than a man with a 5-6\"hammer. <br>\n"," <br>would you rather have<br>more than enough to get the job done or fall =\n"," short. it's totally up<br>to you. our methods are guaranteed to increase y=\n"," our size by 1-3\"<br> <a href=3d\"http://209.163.187.47/cgi-bin/index.php?10=\n"," 004\">come in here and see how</a>\n"," </body>\n"," </html>\n"," \n"," \n"," \n","\n"]}],"source":["# BEGIN YOUR CODE\n","# -----------------------\n","first_ham = original_training_data['email'][0]\n","first_spam = original_training_data['email'][2]\n","# -----------------------\n","# END YOUR CODE\n","\n","print('The text of the first Ham:')\n","print('------------')\n","print(first_ham)\n","\n","print('The text of the first Spam:')\n","print('------------')\n","print(first_spam)"]},{"cell_type":"code","execution_count":8,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AEbvv1L7-c9w","outputId":"ce931ccf-3ae3-46ae-9f8a-1586edc2cf22","executionInfo":{"status":"ok","timestamp":1716297413707,"user_tz":-540,"elapsed":52,"user":{"displayName":"김민경","userId":"05552883468747004724"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[40m\u001b[93m\u001b[1mQ1b: Passed all unit tests!\u001b[0m\n"]}],"source":["assert len(first_ham) == 359 and len(first_spam) == 444\n","print_passed('Q1b: Passed all unit tests!')"]},{"cell_type":"markdown","metadata":{"id":"ouvBVCH8-c9w"},"source":["### Question 1c\n","\n","Discuss one thing you notice that is different between the two emails that might relate to the identification of spam.\n","\n","<!--\n","BEGIN QUESTION\n","name: q1c\n","manual: True\n","points: 2\n","-->\n","<!-- EXPORT TO PDF -->"]},{"cell_type":"markdown","metadata":{"id":"_PkkYtvH-c9w"},"source":["Answer: One thing that might indicate spam is the usage of a direct IP address link versus DNS. This seems to be a method of obfuscation for sending malicious links. Another pattern that the spam contains that the ham does not is the use of HTML tags."]},{"cell_type":"markdown","metadata":{"id":"EEJ511_8-c9w"},"source":["## Training Validation Split\n","The training data is all the data we have available for both training models and **validating** the models that we train. We therefore need to split the training data into separate training and validation datsets. You will need this **validation data** to assess the performance of your classifier once you are finished training.\n","\n","Note that we set the seed (random_state) to 42. This will produce a pseudo-random sequence of random numbers that is the same for every student. **Do not modify this in the following questions, as our tests depend on this random seed.**"]},{"cell_type":"code","execution_count":9,"metadata":{"id":"Lh57_56V-c9w","executionInfo":{"status":"ok","timestamp":1716297414932,"user_tz":-540,"elapsed":1253,"user":{"displayName":"김민경","userId":"05552883468747004724"}}},"outputs":[],"source":["from sklearn.model_selection import train_test_split\n","\n","train, val = train_test_split(\n","    original_training_data, test_size=0.1, random_state=42)"]},{"cell_type":"code","execution_count":10,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kbFU8MUl-c9x","outputId":"abe3fc84-a410-4834-c9ca-dfd143c87d74","executionInfo":{"status":"ok","timestamp":1716297414933,"user_tz":-540,"elapsed":53,"user":{"displayName":"김민경","userId":"05552883468747004724"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["(7513, 4) (835, 4)\n"]}],"source":["print(train.shape, val.shape)   # 더해서 8342 맞음"]},{"cell_type":"markdown","metadata":{"id":"TMf51RV8-c9x"},"source":["# Basic Feature Engineering\n","\n","We would like to take the text of an email and predict whether the email is **ham** or **spam**. This is a *classification* problem, and here we use logistic regression to train a classifier.\n","\n","Recall that to train an logistic regression model we need:\n"," - a numeric feature matrix $X$\n"," - a vector of corresponding binary labels $y$.\n","\n","Unfortunately, our data are text, not numbers. To address this, we can create numeric features derived from the email text and use those features for logistic regression:\n"," - Each row of $X$ is an email.\n"," - Each column of $X$ contains one feature for all the emails.\n","\n","We'll guide you through creating a simple feature, and you'll create more interesting ones when you are trying to increase your accuracy."]},{"cell_type":"markdown","metadata":{"id":"a5kzAWDe-c9x"},"source":["### Question 2\n","\n","Create a function called `words_in_texts` that takes in a list of `words` and a pandas Series of email `texts`. It should output a 2-dimensional NumPy array containing one row for each email text. The row should contain either a 0 or a 1 for each word in the list: 0 if the word doesn't appear in the text and 1 if the word does. For example:\n","\n","```\n",">>> words_in_texts(['hello', 'bye', 'world'],\n","                   pd.Series(['hello', 'hello worldhello']))\n","\n","array([[1, 0, 0],\n","       [1, 0, 1]])\n","```\n","\n","**Hint**: [pandas.Series.str.contains](https://pandas.pydata.org/docs/reference/api/pandas.Series.str.contains.html)\n","\n","*The provided tests make sure that your function works correctly, so that you can use it for future questions.*\n","\n","<!--\n","BEGIN QUESTION\n","name: q2\n","points: 3\n","-->"]},{"cell_type":"code","execution_count":11,"metadata":{"id":"9OANL6hA-c9x","executionInfo":{"status":"ok","timestamp":1716297414933,"user_tz":-540,"elapsed":41,"user":{"displayName":"김민경","userId":"05552883468747004724"}}},"outputs":[],"source":["def words_in_texts(words, texts):\n","    '''\n","    Args:\n","        words (list-like): words to find\n","        texts (Series): strings to search in\n","\n","    Returns:\n","        NumPy array of 0s and 1s with shape (n, p) where n is the\n","        number of texts and p is the number of words.\n","    '''\n","    # BEGIN YOUR CODE\n","    # -----------------------\n","    indicators = []\n","    for word in words:\n","        indicators.append(texts.str.contains(word, regex=False).astype(int))\n","    indicator_array = np.array(indicators).T\n","    # -----------------------\n","    # END YOUR CODE\n","    return indicator_array"]},{"cell_type":"code","execution_count":12,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ghfT7JNi-c9x","outputId":"46dd0315-06ea-4f2f-906c-a0d7d2c30d1a","executionInfo":{"status":"ok","timestamp":1716297414934,"user_tz":-540,"elapsed":37,"user":{"displayName":"김민경","userId":"05552883468747004724"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[40m\u001b[93m\u001b[1mQ2: Passed all unit tests!\u001b[0m\n"]}],"source":["assert np.allclose(\n","    words_in_texts(\n","        ['hello', 'bye', 'world'],\n","        pd.Series(['hello', 'hello worldhello'])),\n","    np.array([[1, 0, 0], [1, 0, 1]]))\n","\n","assert np.allclose(\n","    words_in_texts(\n","        ['a', 'b', 'c', 'd', 'e', 'f', 'g'],\n","        pd.Series(['a b c d ef g', 'a', 'b', 'c', 'd e f g', 'h', 'a h'])),\n","    np.array(\n","        [[1,1,1,1,1,1,1],\n","         [1,0,0,0,0,0,0],\n","         [0,1,0,0,0,0,0],\n","         [0,0,1,0,0,0,0],\n","         [0,0,0,1,1,1,1],\n","         [0,0,0,0,0,0,0],\n","         [1,0,0,0,0,0,0]]))\n","\n","print_passed('Q2: Passed all unit tests!')"]},{"cell_type":"markdown","metadata":{"id":"rmMhnJmR-c9x"},"source":["# Basic EDA\n","\n","We need to identify some features that allow us to distinguish spam emails from ham emails. One idea is to compare the distribution of a single feature in spam emails to the distribution of the same feature in ham emails.\n","\n","If the feature is itself a binary indicator (such as whether a certain word occurs in the text), this amounts to comparing the proportion of spam emails with the word to the proportion of ham emails with the word."]},{"cell_type":"code","execution_count":13,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":584},"id":"lOxun1Re-c9x","outputId":"82c70b48-9936-4b45-a827-9bbbc7da12b1","executionInfo":{"status":"ok","timestamp":1716297414935,"user_tz":-540,"elapsed":22,"user":{"displayName":"김민경","userId":"05552883468747004724"}}},"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Markdown object>"],"text/markdown":"> Our Original DataFrame has some words column and a type column. You can think of each row is a sentence, and the value of 1 or 0 indicates the number of occurances of the word in this sentence."},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["   word_1  word_2  type\n","0       1       0  spam\n","1       0       1   ham\n","2       1       0   ham\n","3       0       1   ham"],"text/html":["\n","  <div id=\"df-9ce335c9-991a-41ec-bdc8-db68fbed63f2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>word_1</th>\n","      <th>word_2</th>\n","      <th>type</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>spam</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>ham</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>ham</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>ham</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9ce335c9-991a-41ec-bdc8-db68fbed63f2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9ce335c9-991a-41ec-bdc8-db68fbed63f2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9ce335c9-991a-41ec-bdc8-db68fbed63f2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2efbf3b1-153d-4480-89e9-40696729d48b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2efbf3b1-153d-4480-89e9-40696729d48b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2efbf3b1-153d-4480-89e9-40696729d48b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"word_1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"word_2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"type\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"ham\",\n          \"spam\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.Markdown object>"],"text/markdown":"> `melt` will turn columns into variale, notice how `word_1` and `word_2` become `variable`, their values are stoed in the value column"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["   type variable  value\n","0  spam   word_1      1\n","1   ham   word_1      0\n","2   ham   word_1      1\n","3   ham   word_1      0\n","4  spam   word_2      0\n","5   ham   word_2      1\n","6   ham   word_2      0\n","7   ham   word_2      1"],"text/html":["\n","  <div id=\"df-306cfa57-eed4-4d35-9a65-619ada439734\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>type</th>\n","      <th>variable</th>\n","      <th>value</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>spam</td>\n","      <td>word_1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>ham</td>\n","      <td>word_1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>ham</td>\n","      <td>word_1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>ham</td>\n","      <td>word_1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>spam</td>\n","      <td>word_2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>ham</td>\n","      <td>word_2</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>ham</td>\n","      <td>word_2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>ham</td>\n","      <td>word_2</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-306cfa57-eed4-4d35-9a65-619ada439734')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-306cfa57-eed4-4d35-9a65-619ada439734 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-306cfa57-eed4-4d35-9a65-619ada439734');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7f8cfeab-7f68-41aa-ac11-c0bada3ce730\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7f8cfeab-7f68-41aa-ac11-c0bada3ce730')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7f8cfeab-7f68-41aa-ac11-c0bada3ce730 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"ham\",\n          \"spam\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"variable\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"word_2\",\n          \"word_1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"value\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0,\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}],"source":["from IPython.display import display, Markdown\n","df = pd.DataFrame({\n","    'word_1': [1, 0, 1, 0],\n","    'word_2': [0, 1, 0, 1],\n","    'type': ['spam', 'ham', 'ham', 'ham']\n","})\n","display(Markdown(\"> Our Original DataFrame has some words column and a type column. You can think of each row is a sentence, and the value of 1 or 0 indicates the number of occurances of the word in this sentence.\"))\n","display(df);\n","display(Markdown(\"> `melt` will turn columns into variale, notice how `word_1` and `word_2` become `variable`, their values are stoed in the value column\"))\n","display(df.melt(\"type\"))"]},{"cell_type":"markdown","metadata":{"id":"u1ng79qh-c9y"},"source":["We can create a bar chart like the one above comparing the proportion of spam and ham emails containing certain words. Choose a set of words that are different from the ones above, but also have different proportions for the two classes. Make sure that we only consider emails from `train`.\n","\n","<!--\n","BEGIN QUESTION\n","name: q3a\n","manual: True\n","format: image\n","points: 2\n","-->\n","<!-- EXPORT TO PDF format:image -->"]},{"cell_type":"code","execution_count":14,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":783},"id":"kCRGFEby-c9y","outputId":"25d8a82c-30ab-44fd-f83b-ce1b5d7fafc3","executionInfo":{"status":"ok","timestamp":1716297419471,"user_tz":-540,"elapsed":4552,"user":{"displayName":"김민경","userId":"05552883468747004724"}}},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x800 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# We must do this in order to preserve the ordering of emails to labels for words_in_texts\n","train=train.reset_index(drop=True)\n","\n","some_words = ['body', 'html', 'please', 'money', 'business', 'offer']\n","Phi_train = words_in_texts(some_words, train['email'])\n","\n","df = pd.DataFrame(data = Phi_train, columns = some_words)\n","df['label'] = train['spam']\n","\n","plt.figure(figsize=(8,8))\n","sns.barplot(x = \"variable\",\n","            y = \"value\",\n","            hue = \"label\",\n","            data = (df\n","                    .replace({'label':\n","                                {0 : 'Ham',\n","                                 1 : 'Spam'}})\n","                    .melt('label')\n","                    .groupby(['label', 'variable'])\n","                    .mean()\n","                    .reset_index()))\n","\n","plt.ylim([0, 1])\n","plt.xlabel('Words')\n","plt.ylabel('Proportion of Emails')\n","plt.legend(title = \"\")\n","plt.title(\"Frequency of Words in Spam/Ham Emails\")\n","plt.tight_layout()\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"B6iIHbGL-c9y"},"source":["### Question 3\n","\n","When the feature is binary, it makes sense to compare its proportions across classes (as in the previous question). Otherwise, if the feature can take on numeric values, we can compare the distributions of these values for different classes.\n","\n","Create a *class conditional density plot* like the one above (using `sns.distplot`), comparing the distribution of the length of spam emails to the distribution of the length of ham emails in the training set. Set the x-axis limit from 0 to 50000.\n","\n","<!--\n","BEGIN QUESTION\n","name: q3b\n","manual: True\n","format: image\n","points: 2\n","-->\n","<!-- EXPORT TO PDF format:image -->"]},{"cell_type":"code","execution_count":15,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":874},"id":"WOhTQJkM-c9y","outputId":"67f0df59-3cc6-4bbf-f737-e1e2a8062b22","executionInfo":{"status":"ok","timestamp":1716297422100,"user_tz":-540,"elapsed":2657,"user":{"displayName":"김민경","userId":"05552883468747004724"}}},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-15-bb26f5e5ecf8>:5: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `kdeplot` (an axes-level function for kernel density plots).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(ham['length'], hist = False, label = 'ham').set(xlim = (0,50000))\n","<ipython-input-15-bb26f5e5ecf8>:6: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `kdeplot` (an axes-level function for kernel density plots).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(spam['length'], hist = False, label = 'spam').set(xlim = (0,50000))\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["train['length'] = train['email'].apply(len)\n","ham = train[train['spam']==0]\n","spam = train[train['spam']==1]\n","fig = plt.figure(figsize=(10,6))\n","sns.distplot(ham['length'], hist = False, label = 'ham').set(xlim = (0,50000))\n","sns.distplot(spam['length'], hist = False, label = 'spam').set(xlim = (0,50000))\n","plt.xlabel('Length of email body')\n","plt.ylabel('Distribution')\n","plt.tight_layout()\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"kGxhfFNy-c9y"},"source":["## Basic Classification\n","\n","Notice that the output of `words_in_texts(words, train['email'])` is a numeric matrix containing features for each email. This means we can use it directly to train a classifier!"]},{"cell_type":"markdown","metadata":{"id":"AWxulxZ2-c9y"},"source":["### Question 4\n","\n","We've given you 5 words that might be useful as features to distinguish spam/ham emails. Use these words as well as the `train` DataFrame to create two NumPy arrays: `X_train` and `Y_train`.\n","\n","- `X_train` should be a matrix of 0s and 1s created by using your `words_in_texts` function on all the emails in the training set.\n","\n","- `Y_train` should be a vector of the correct labels for each email in the training set.\n","\n","*The provided tests check that the dimensions of your feature matrix (X) are correct, and that your features and labels are binary (i.e. consists of 0 and 1, no other values). It does not check that your function is correct; that was verified in a previous question.*\n","\n","<!--\n","BEGIN QUESTION\n","name: q4\n","points: 2\n","-->"]},{"cell_type":"code","execution_count":16,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Q2iQ0YrI-c9y","outputId":"f326636c-0403-46ca-c524-da780add2638","executionInfo":{"status":"ok","timestamp":1716297423062,"user_tz":-540,"elapsed":1028,"user":{"displayName":"김민경","userId":"05552883468747004724"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([[0, 0, 0, 0, 0],\n","        [0, 0, 0, 0, 0],\n","        [0, 0, 0, 0, 0],\n","        [0, 0, 0, 0, 0],\n","        [0, 0, 0, 1, 0]]),\n"," array([0, 0, 0, 0, 0]))"]},"metadata":{},"execution_count":16}],"source":["some_words = ['drug', 'bank', 'prescription', 'memo', 'private']\n","\n","# BEGIN YOUR CODE\n","# -----------------------\n","X_train = words_in_texts(some_words, train['email']).astype(int)\n","Y_train = np.array(train['spam'])\n","# -----------------------\n","# END YOUR CODE\n","\n","X_train[:5], Y_train[:5]"]},{"cell_type":"code","execution_count":17,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"A9sVGEvx-c9y","outputId":"1c705410-416e-4fe8-b979-0b7a4483ef05","executionInfo":{"status":"ok","timestamp":1716297423063,"user_tz":-540,"elapsed":72,"user":{"displayName":"김민경","userId":"05552883468747004724"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[40m\u001b[93m\u001b[1mQ4: Passed all unit tests!\u001b[0m\n"]}],"source":["assert X_train.shape == (7513, 5)\n","assert len(np.unique(X_train)) == 2\n","assert len(np.unique(Y_train)) == 2\n","\n","print_passed('Q4: Passed all unit tests!')"]},{"cell_type":"markdown","metadata":{"id":"s5zxFW5J-c9y"},"source":["### Question 5\n","\n","Now we have matrices we can give to scikit-learn!\n","\n","- Using the [`LogisticRegression`](http://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html) classifier, train a logistic regression model using `X_train` and `Y_train`.\n","- Then, output the accuracy of the model (on the training data) in the cell below. You should get an accuracy around 75\\%.\n","\n","<!--\n","BEGIN QUESTION\n","name: q5\n","points: 2\n","-->"]},{"cell_type":"code","execution_count":18,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VL7_VYxL-c9y","outputId":"f3c9814b-d5d8-4bff-ab13-19d128d4e138","executionInfo":{"status":"ok","timestamp":1716297423063,"user_tz":-540,"elapsed":65,"user":{"displayName":"김민경","userId":"05552883468747004724"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Training Accuracy:  0.7576201251164648\n"]}],"source":["from sklearn.linear_model import LogisticRegression\n","\n","# BEGIN YOUR CODE\n","# -----------------------\n","model = LogisticRegression()\n","model.fit(X_train, Y_train)\n","training_accuracy = model.score(X_train, Y_train)\n","# -----------------------\n","# END YOUR CODE\n","\n","print(\"Training Accuracy: \", training_accuracy)"]},{"cell_type":"code","execution_count":19,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"T4LqNCSb-c9z","outputId":"f98647ab-5fc1-40ff-94f9-ecc9b275ae98","executionInfo":{"status":"ok","timestamp":1716297423063,"user_tz":-540,"elapsed":59,"user":{"displayName":"김민경","userId":"05552883468747004724"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[40m\u001b[93m\u001b[1mQ5: Passed all unit tests!\u001b[0m\n"]}],"source":["assert training_accuracy > 0.72\n","print_passed('Q5: Passed all unit tests!')"]},{"cell_type":"markdown","metadata":{"id":"3jv3rfgv-c9z"},"source":["## Evaluating Classifiers"]},{"cell_type":"markdown","metadata":{"id":"mEVZsTjS-c9z"},"source":["That doesn't seem too shabby! But the classifier you made above isn't as good as this might lead us to believe. First, we are evaluating accuracy on the training set, which may lead to a misleading accuracy measure, especially if we used the training set to identify discriminative features. In future parts of this analysis, it will be safer to hold out some of our data for model validation and comparison.\n","\n","Presumably, our classifier will be used for **filtering**, i.e. preventing messages labeled `spam` from reaching someone's inbox. There are two kinds of errors we can make:\n","- False positive (FP): a ham email gets flagged as spam and filtered out of the inbox.\n","- False negative (FN): a spam email gets mislabeled as ham and ends up in the inbox.\n","\n","These definitions depend both on the true labels and the predicted labels. False positives and false negatives may be of differing importance, leading us to consider more ways of evaluating a classifier, in addition to overall accuracy:\n","\n","**Precision** measures the proportion $\\frac{\\text{TP}}{\\text{TP} + \\text{FP}}$ of emails flagged as spam that are actually spam.\n","\n","**Recall** measures the proportion $\\frac{\\text{TP}}{\\text{TP} + \\text{FN}}$ of spam emails that were correctly flagged as spam.\n","\n","**False-alarm rate** measures the proportion $\\frac{\\text{FP}}{\\text{FP} + \\text{TN}}$ of ham emails that were incorrectly flagged as spam.\n","\n","The following image might help:\n","\n","<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/2/26/Precisionrecall.svg/700px-Precisionrecall.svg.png\" width=\"500px\">\n","\n","Note that a true positive (TP) is a spam email that is classified as spam, and a true negative (TN) is a ham email that is classified as ham."]},{"cell_type":"markdown","metadata":{"id":"TikK5QTS-c9z"},"source":["### Question 6a\n","\n","Suppose we have a classifier `zero_predictor` that always predicts 0 (never predicts positive). How many false positives and false negatives would this classifier have if it were evaluated on the training set and its results were compared to `Y_train`? Fill in the variables below (answers can be hard-coded):\n","\n","<!--\n","BEGIN QUESTION\n","name: q6a\n","points: 1\n","-->"]},{"cell_type":"code","execution_count":20,"metadata":{"id":"UH8R7hKj-c9z","executionInfo":{"status":"ok","timestamp":1716297423064,"user_tz":-540,"elapsed":54,"user":{"displayName":"김민경","userId":"05552883468747004724"}}},"outputs":[],"source":["# BEGIN YOUR CODE\n","# -----------------------\n","zero_predictor_fp = 0\n","zero_predictor_fn =sum(Y_train)\n","# -----------------------\n","# END YOUR CODE"]},{"cell_type":"code","execution_count":21,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_n0eCG3p-c9z","outputId":"db47a28a-d279-4f0c-bd8f-f8a63c1dd1d5","executionInfo":{"status":"ok","timestamp":1716297423065,"user_tz":-540,"elapsed":54,"user":{"displayName":"김민경","userId":"05552883468747004724"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[40m\u001b[93m\u001b[1mQ6a: Passed all unit tests!\u001b[0m\n"]}],"source":["assert zero_predictor_fp + zero_predictor_fn == 1918\n","print_passed('Q6a: Passed all unit tests!')"]},{"cell_type":"markdown","metadata":{"id":"EwZ7pTRx-c9z"},"source":["### Question 6b\n","\n","What are the accuracy and recall of `zero_predictor` (classifies every email as ham) on the training set? Do NOT use any `sklearn` functions.\n","\n","<!--\n","BEGIN QUESTION\n","name: q6b\n","points: 1\n","-->"]},{"cell_type":"code","execution_count":22,"metadata":{"id":"8QNmzlhq-c9z","executionInfo":{"status":"ok","timestamp":1716297423065,"user_tz":-540,"elapsed":43,"user":{"displayName":"김민경","userId":"05552883468747004724"}}},"outputs":[],"source":["# BEGIN YOUR CODE\n","# -----------------------\n","zero_predictor_acc = len(ham)/len(train)\n","zero_predictor_recall = 0\n","# -----------------------\n","# END YOUR CODE"]},{"cell_type":"code","execution_count":23,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ruHICzWJ-c9z","outputId":"cecff86f-957c-49e5-bc6d-a062f6e46ea6","executionInfo":{"status":"ok","timestamp":1716297423065,"user_tz":-540,"elapsed":43,"user":{"displayName":"김민경","userId":"05552883468747004724"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[40m\u001b[93m\u001b[1mQ6b: Passed all unit tests!\u001b[0m\n"]}],"source":["assert np.isclose(zero_predictor_acc + zero_predictor_recall, 0.7447091707706642)\n","print_passed('Q6b: Passed all unit tests!')"]},{"cell_type":"markdown","metadata":{"id":"9iX-Z_qX-c9z"},"source":["### Question 6c\n","\n","Compute the precision, recall, and false-alarm rate of the `LogisticRegression` classifier created and trained in Question 5. **Note: Do NOT use any `sklearn` built-in functions.**\n","\n","<!--\n","BEGIN QUESTION\n","name: q6d\n","points: 2\n","-->"]},{"cell_type":"code","execution_count":24,"metadata":{"id":"WmM7bi3g-c9z","executionInfo":{"status":"ok","timestamp":1716297423066,"user_tz":-540,"elapsed":28,"user":{"displayName":"김민경","userId":"05552883468747004724"}}},"outputs":[],"source":["# BEGIN YOUR CODE\n","# -----------------------\n","Y_train_prediction = model.predict(X_train)\n","tp = ((Y_train == 1) & (Y_train_prediction == 1)).sum()\n","tn = ((Y_train == 0) & (Y_train_prediction == 0)).sum()\n","fp = ((Y_train == 0) & (Y_train_prediction == 1)).sum()\n","fn = ((Y_train == 1) & (Y_train_prediction == 0)).sum()\n","logistic_predictor_precision = tp/(tp+fp)\n","logistic_predictor_recall = tp/(tp+fn)\n","logistic_predictor_far = fp/(fp+tn)\n","# -----------------------\n","# END YOUR CODE"]},{"cell_type":"code","execution_count":25,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"l1ksLYsZ-c9z","outputId":"66efd870-fe4a-405d-9a10-bcf273132774","executionInfo":{"status":"ok","timestamp":1716297423068,"user_tz":-540,"elapsed":29,"user":{"displayName":"김민경","userId":"05552883468747004724"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[40m\u001b[93m\u001b[1mQ6c: Passed all unit tests!\u001b[0m\n"]}],"source":["assert np.isclose(logistic_predictor_precision, 0.6422287390029325)\n","assert np.isclose(logistic_predictor_recall, 0.11418143899895725)\n","assert np.isclose(logistic_predictor_far, 0.021805183199285077)\n","print_passed('Q6c: Passed all unit tests!')"]},{"cell_type":"markdown","metadata":{"id":"SgF9D88T-c9z"},"source":["### Question 6d\n","\n","1. Our logistic regression classifier got 75.6% prediction accuracy (number of correct predictions / total). How does this compare with predicting 0 for every email?\n","1. Given the word features we gave you above, name one reason this classifier is performing poorly. Hint: Think about how prevalent these words are in the email set.\n","1. Which of these two classifiers would you prefer for a spam filter and why? Describe your reasoning and relate it to at least one of the evaluation metrics you have computed so far.\n","\n","<!--\n","BEGIN QUESTION\n","name: q6f\n","manual: True\n","points: 3\n","-->\n","<!-- EXPORT TO PDF -->"]},{"cell_type":"markdown","metadata":{"id":"xDhUZqqt-c9z"},"source":["Answer:\n","1. The zero predictor has a 74.5% prediction accuracy. Since the logistic regression classifier is only a 1.1% improvement on accuracy from the zero predictor, it has poor predictive power so far.\n","\n","2. The word features given above also appear commonly in ham, such as the word \"bank\" which is used in many regular emails. We would have to refine the words to be more specific to words more commonly found in spam versus ham.\n","\n","3. Even though the logistic regression classifier is only a slight improvement, it is still an improvement. In combination with have a higher recall rate of 11.4% versus 0% of the zero predictor classifier, its ability to identify some spam emails versus none makes it a superior choice for a spam filter."]},{"cell_type":"markdown","metadata":{"id":"HVm_NmgG-c9z"},"source":["# Part II - Moving Forward\n","\n","With this in mind, it is now your task to make the spam filter more accurate. In order to get full credit on the accuracy part of this assignment, you must get at least **88%** accuracy on the `validation` set.\n","\n","Here are some ideas for improving your model:\n","\n","1. Finding better features based on the email text. Some example features are:\n","    1. Number of characters in the subject / body\n","    1. Number of words in the subject / body\n","    1. Use of punctuation (e.g., how many '!' were there?)\n","    1. Number / percentage of capital letters\n","    1. Whether the email is a reply to an earlier email or a forwarded email\n","1. Finding better words to use as features. Which words are the best at distinguishing emails? This requires digging into the email text itself.\n","1. Better data processing. For example, many emails contain HTML as well as text. You can consider extracting out the text from the HTML to help you find better words. Or, you can match HTML tags themselves, or even some combination of the two.\n","1. Model selection. You can adjust parameters of your model (e.g. the regularization parameter) to achieve higher accuracy. Recall that you should use cross-validation to do feature and model selection properly! Otherwise, you will likely overfit to your training data.\n","\n","You may use whatever method you prefer in order to create features, but **you are not allowed to import any external feature extraction libraries**. In addition, **you are only allowed to train logistic regression models**. No random forests, k-nearest-neighbors, neural nets, etc."]},{"cell_type":"markdown","metadata":{"id":"6YXT9eVw-c90"},"source":["### Question 7: EDA\n","\n","In the cell below, show a visualization that you used to select features for your model. Include both\n","\n","1. A plot showing something meaningful about the data that helped you during feature / model selection.\n","2. 2-3 sentences describing what you plotted and what its implications are for your features.\n","\n","Feel free to create as many plots as you want in your process of feature selection, but select one for the response cell below.\n","\n","**You should not just produce an identical visualization to question 3.** Specifically, don't show us a bar chart of proportions, or a one-dimensional class-conditional density plot. Any other plot is acceptable, as long as it comes with thoughtful commentary. Here are some ideas:\n","\n","1. Consider the correlation between multiple features (look up correlation plots and `sns.heatmap`).\n","1. Try to show redundancy in a group of features (e.g. `body` and `html` might co-occur relatively frequently, or you might be able to design a feature that captures all html tags and compare it to these).\n","1. Visualize which words have high or low values for some useful statistic.\n","1. Visually depict whether spam emails tend to be wordier (in some sense) than ham emails."]},{"cell_type":"markdown","metadata":{"id":"w4dBsZ3L-c90"},"source":["Generate your visualization in the cell below and provide your description in a comment.\n","\n","<!--\n","BEGIN QUESTION\n","name: q8\n","manual: True\n","format: image\n","points: 6\n","-->\n","<!-- EXPORT TO PDF format:image -->"]},{"cell_type":"code","execution_count":27,"metadata":{"id":"fFwkgESs-c90","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1716297563109,"user_tz":-540,"elapsed":47746,"user":{"displayName":"김민경","userId":"05552883468747004724"}},"outputId":"40cf41c6-bce9-43f5-8772-d9763b1a745f"},"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Package stopwords is already up-to-date!\n","[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Package punkt is already up-to-date!\n","WARNING:matplotlib.legend:No artists with labels found to put in legend.  Note that artists whose label start with an underscore are ignored when legend() is called with no argument.\n","<ipython-input-27-89bfb9cc045c>:87: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `kdeplot` (an axes-level function for kernel density plots).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(ham['s_special'], hist = False, label = 'ham').set(xlim = (0,100))\n","<ipython-input-27-89bfb9cc045c>:88: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `kdeplot` (an axes-level function for kernel density plots).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(spam['s_special'], hist = False, label = 'spam').set(xlim = (0,100))\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 500x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x600 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAABbgAAAI2CAYAAACSQe4EAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAADnAUlEQVR4nOzdeXgUVdr38V91p7OHLUAgLBJRISiI4oMgjAqCRmQ04yC4jExEQWV5Rxl1UJRnBhUYZ8RRDPDICCIKggtBARFFcJB9R3bZMQECgYRAEpJO1/sHpocmC51OdzqdfD/XletKV52qc1d3pZLcdeo+hmmapgAAAAAAAAAACDAWfwcAAAAAAAAAAIAnSHADAAAAAAAAAAISCW4AAAAAAAAAQEAiwQ0AAAAAAAAACEgkuAEAAAAAAAAAAYkENwAAAAAAAAAgIJHgBgAAAAAAAAAEJBLcAAAAAAAAAICARIIbAAAAAAAAABCQSHADAADAq9LS0vTiiy/q9ttv13XXXadWrVrppptu8ndYVcqjjz6qVq1aacKECdWyPwDu++WXX9SqVSu1atVKv/zyi9vrAADABUH+DgAAAFSeCRMm6N1333Wr7e7du30cDaqj7OxsPfTQQzp27JgkKSoqSrVr11ZkZORlt/373/+uqVOnKioqSmvWrJHVai2x3bPPPquFCxdKksaOHav777+/xHabN29Wv379JEn//ve/9Zvf/MaTQ4IXnDt3Tp999pmWLFmivXv36syZMwoPD1d0dLRiY2N1ww03qEOHDurYsWOpn3tNMHjwYC1ZskSvvfaaHnjgAUlSq1atJElDhw7VsGHDytx+xIgRmjt3rpo0aaLvv//e5/FWpvL8/pL4HQYAQE1CghsAgBqqfv36/g4B1dD8+fN17Ngx1a5dW7NmzVLLli3d3vbmm2/W1KlTlZ2drR07dqht27Yltlu7dq3L96UluNesWSNJstls6tChQzmOovpp3Lix4uLiVLdu3Urve9euXXrqqad09OhR57KQkBCZpqkDBw5o//79+vHHHyVJS5YsUdOmTSs9xqogLy9PK1eulMViUffu3f0dTpVW3X5/2Ww2xcXFOb8HAADlQ4IbAIAaasWKFf4OAdXQnj17JEmdOnUqV3Jbkm666SZZrVYVFhZq7dq1JSa49+3bp5MnT6pBgwY6ceKES7L7UkXr2rZtq/Dw8HLFUt288cYbfun37NmzGjRokI4fP666detq8ODB6t27t+rVqydJysnJ0Y4dO7R06VLNmzfPLzFWFStWrFBubq5uuOEGRUdH+zucKq26/f6KiYnRokWL/B0GAAABixrcAAAA8Jq8vDxJ8iihHBkZqWuvvVbSf0dfX6poeffu3dWiRQulpqbqyJEjxdoVFBRo48aNki6MDId/LFy4UMePH5ckTZ48Wf3793cmt6UL58lNN92k559/XsuWLVOjRo38FarfLVmyRJJ0xx13+DkSAACAwMIIbgAAUKpffvnFmWxZsmSJHA6HpkyZohUrVig9PV0NGzZ0qfPqcDg0f/58ffXVV9q+fbvOnDmjyMhItWnTRvfff7/uueceGYZRYl+FhYWaOXOmvvjiCx04cEDBwcFq1aqVHnnkESUkJOjRRx/V2rVri9WhvTTG0sobdO/eXampqWXWbF62bJk+//xzbd68WadPn1ZYWJiuueYa3XPPPerTp4+Cg4OLbXNxXEOHDtWnn36qTz/9VPv27ZNpmrrmmmv08MMP67777ivzvd63b58++ugjrVmzxlnKoWHDhmrTpo0SEhLUs2dPWSwWzZo1S3/9619Vu3ZtLV++XCEhISXuz+FwqEePHkpNTXWrdu+lTpw4oalTp+o///mPUlNTJUlNmjTRbbfdpgEDBhQrEVD0PhSZO3eu5s6d63xd1vt+sZtvvllbt27Vhg0bVFhYWKwec1EfN998s0zT1MGDB7V27Vo1a9bMpd1PP/2knJwcZ9uLFRYWau7cufryyy+1e/dunTt3TnXr1tUNN9ygRx55pNSE+MWf9VNPPaUZM2Zo/vz5Onz4sLKzs/Xhhx86t73c+VyWvLw8ffzxx1q8eLH279+vnJwcRUVFqV69emrbtq26d++uu+6667LvZWmxX3ouXPyz0bt3b3344Yf68ssvdfjwYVmtVl177bV64okndOutt5arT0nauXOnJCk6Olrt27cvs21QUPF/TS79+bbb7Zo8ebJWrlypU6dOqX79+rr11ls1ZMgQxcTElLjfzZs369tvv9WmTZt09OhRnTx5UiEhIbryyivVo0cPPfLII4qIiChx26L61x9++KGuueYaTZ48WUuWLFF6erqio6PVrVs3DR061Jm0T01N1Xvvvafly5frxIkTio6OVkJCgoYOHVpmHXqHw6GlS5dK8l2C2+FwaM2aNVqyZIm2bt2qY8eO6dSpU4qIiNDVV1/tvM6VVCLj0s/BMAxNmjRJP/74ozIyMhQTE6N77rlHTz75pPPm1p49e/Tee+9p3bp1OnXqlBo3bqzExEQNHDjQL2U4Lj7P7777bv373//WwoULlZaWpqioKHXu3Fn/7//9P+e15NSpU3r//ff13Xff6ejRo4qKitLtt9+uZ599tsQSKQUFBfrPf/6jZcuWafv27UpPT1dmZqaioqLUpk0b/e53vyv1d6C7v8dKcuzYMU2dOlUrVqxQamqq7Ha76tSpo4YNG+qmm25S79691a5dOw/fNQAAAgMJbgAA4JZNmzZp1KhRysnJUVhYWLEERWZmpoYOHap169Y5l0VFRen06dNasWKFVqxYoQULFujtt98ulijOz8/X008/7azDa7FYZLPZtG7dOq1du1YDBw706bHl5eXphRde0DfffONcFhkZqezsbK1fv17r16/XvHnz9N5776l27dol7qOwsFBDhgzRkiVLFBQUpNDQUJ07d06bN2/W5s2bdejQIf2///f/Stz2vffe01tvvSWHwyHpQn3isLAwHT58WAcPHtTChQu1bt061apVS7/97W/1xhtvKCsrS4sWLSo1cf7jjz8qNTVVVqtVffr0Kdf7sXbtWg0ZMkRnzpyR9N/R2Hv37tXevXv12WefaeLEibrpppuc29SuXVv169dXdna2zp8/r5CQEEVFRTnXh4aGutX3zTffrClTpujs2bPavn17scRM0fn1P//zPyosLNScOXO0du1a/f73vy92DJIUHBysG2+80bk8OztbgwcPdq63Wq2KiIjQiRMn9M033+ibb77RgAED9Je//KXUGM+fP69HH31UmzZtUlBQkCIiIlySVhU5n8+ePatHHnlEu3btkiQZhqGoqChlZ2fr9OnT2rdvn9atW1fuBLc7cnJy9Ic//EFbtmyRzWaTzWbT2bNntWbNGq1du1avvfZauc+lImfOnFFubq7CwsI8jm/r1q16+eWXde7cOYWHh8tqtero0aOaPXu2vvnmG02dOtX5BMDFiiYalaSwsDCFhYUpKytLW7Zs0ZYtWzRv3jx9+OGHZZYFOXr0qF544QUdO3ZM4eHhcjgcSktL08cff6zVq1frk08+0cGDBzVw4EBlZmYqMjJSDodDR48e1bRp07RlyxZ99NFHpU6guXHjRp06dUpXXnmlrrzySo/fo7KkpaUpKSnJ+To8PFyhoaHKzMzUunXrtG7dOs2fP1/vv/9+mT+vO3bs0MiRI503MAsLC3XkyBFNnjxZ69ev1wcffKAVK1bomWeeUW5urqKiolRQUKBDhw7p7bff1s8//6y33nrLJ8fojuzsbPXt21d79uxRSEiIDMPQiRMn9OWXX2rVqlX65JNPZJqmkpKS9MsvvygsLEwOh0MnT57UZ599pvXr1+vzzz8vdsNi48aNGjx4sPN1ZGSkgoODderUKf3444/68ccf9e233+qtt96SxeKdB6l37dql/v37KysrS9KF61lkZKROnjypEydOOG80k+AGAFR3lCgBAABuGTVqlK6++mp99tln2rx5szZt2qT3339f0oXk7rBhw7Ru3TrFx8dr8uTJ2rx5s9avX69Nmzbp73//u6Kjo/X999/rn//8Z7F9v/nmm/rxxx9lGIaeeeYZZ7JlxYoVeuihhzRlyhTnSFBfeOWVV/TNN9+oWbNm+uc//6kNGzZow4YN2rJliyZOnKhmzZpp8+bNeumll0rdx8yZM7V27VqNGzfOuf0PP/ygbt26SZImTZqkgwcPlrjdm2++KYfDoe7duyslJUVbt27VmjVrtHHjRk2dOlW9evVyJkQiIyN17733SpI+/fTTUuMpWnfrrbeqcePGbr8XR48edSa3r7rqKs2cOVObNm3Spk2b9PHHHysuLk5ZWVkaMmSIs/SEJL377rtasWKFevXqJUnq1auX88bGxcsvp0OHDs6bJ5eWKSmqv92iRQs1bNhQHTt2lKQS63AXbdu+fXuXUe4jR47U2rVrZbPZ9PLLL2vDhg1at26dli9f7kyST506VbNmzSo1xo8//li7d+/W2LFjtWHDBq1du1arVq1yjvatyPn84YcfateuXapTp44mTJigrVu3at26dfrpp5/0n//8R3//+9/VpUsXt97L8nrnnXd07NgxJScnOz/zr7/+Wu3bt5dpmnr99deVnZ1drn0WJdYKCgo0cuRIZWZmehzfqFGj1LRpU3366afatGmTNm/erPfff1+xsbHOG2xnz54ttl23bt301ltv6ccff9TmzZu1du1abdmyRe+++67i4uK0d+9e/e///m+Zfb/++uuqW7eu5syZ43xvxo8fr7CwMO3bt09vv/22nnnmGbVu3Vrz58/Xhg0btHHjRr3yyiuyWq3auHGjvvjii1L3XxnlSYKCgvTb3/5WkyZN0po1a7Rp0yatX79eGzdu1NixY9WwYUOtX7/+ssnnkSNH6tprr9WCBQucx/nyyy/LarVq/fr1Sk5O1nPPPadu3brp+++/1/r167VhwwY99dRTki6UrVm5cqXPjvNy3n33XZ07d05Tp07V5s2bndfZevXq6cSJE/rnP/+p4cOHKyoqSrNnz3b+vnvrrbcUFhamgwcPasqUKcX2GxYWpn79+mnatGnO3wEbN27UmjVrNHLkSEVGRmrRokX66KOPvHYs48aNU1ZWlq699lrNnj1b27dv19q1a7V161Z98803+stf/qKrrrrKa/0BAFBVMYIbAIAaqqwk2QcffKCrr77aZVndunU1bdo0l0f54+LiJElfffWV1q5dqyuvvFIzZsxwGbkbHh6uxMREXXXVVerTp49mzpypJ5980jla8vjx485/+J9++mk9/fTTzm2jo6P117/+VdnZ2Zo/f37FD7oE69ev15dffqno6GjNmDHDJRkcEhKiO+64Q9dee63uvvtufffdd9q5c6fi4+OL7ScrK0vTp09Xp06dnMsaNWqkd955R3fccYfS09P19ddfuxxfVlaWM+F/zz336M0333QZCRwWFqYuXboU+6weeughffLJJ1q3bp32799fbMTnyZMnneUO+vbtW673Y/LkyTpz5oxq166tDz74QA0aNHCuu+mmm/TBBx/onnvuUWZmpv7v//5Po0aNKtf+Lyc8PFzXXXedNm3aVGy0c1HSuiix3ahRIzVr1kxHjhzRkSNHnKUF8vPztWnTJkmu5Um2bNniHKX/yiuvuIzsbdCggcaMGaOzZ8/qm2++0dtvv63777+/xBIwOTk5mjRpkrp37+5cVrduXUkVP5+L4h4wYIDuvPNO53KLxaKYmBglJiYqMTGxzPfQU7m5uZo1a5bL5KBXXnmlJk2apNtvv105OTlaunSp8waLO+655x5NnTpVe/bs0YIFC7R48WLdeOONateuna699lq1b9/e7RswVqtV06ZNc147DMNQ165d9e9//1v33Xef0tLS9Mknn+iJJ55w2W7y5MnF9hUaGqqePXuqXbt26tGjh7777julpaUpNja2xL6Dg4M1bdo05+dss9l0zz33aO/evZo4caI++ugjXX311ZoyZYrzCZWQkBD94Q9/0Nat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vaRt27Y5123atEn9+/d3exJmdx07dkx33nmnJk6cqB07drhM3Llr1y4999xzki7cNCrt2gkAQHXBJJMAAKDCrFarJkyYoOeee05Lly7V22+/rbfffluRkZGyWCzKzs52jk6+dFStJD3//PPat2+fVq5cqfHjxzu3PXPmjEzT1MCBA7Vlyxbn6NxLDRw4UN9++6327t2r0aNH67XXXnNub7PZ9Pe//11vvvmmUlNTS9z+b3/7m6xWqz799FNNnz5d06dPV3h4uGw2m7Kzs11GyXl75OyDDz6orKws/etf/9KSJUu0ZMkShYaGKjQ0VGfOnHH2XdpIvaCgIPXp08c5OrCik0s2atRIycnJGjx4sH7++Wc99NBDzqRXUcK1Vq1aSk5OVkxMjMf9uOPmm2/WmjVrnBOBljVpZMeOHTV//vzLtn399dd1+vRprV27Vq+++qrGjh2riIgI57kmSQMGDKjQhKMVOZ+zs7M1Y8YMzZgxQ4ZhKCoqSna73SXZnZSU5EzcVnVBQUHKycnRF198oS+++ELShZrbQUFBxeri33fffRo+fHip+xo9erRefvllPfDAAwoPD5dpms4bFLVq1dKECROcI7aLPPPMM1q5cqVOnjypYcOGKSgoSGFhYc6+hw8frh9//LHUa4svFdVR93V5kiIvvfSSHn30UR0/flxJSUkKDg6WzWbTuXPnFBQUpNdff13vvPOOy7lWVXXp0uWybSZMmOBM6vuaxWLRqFGjNHToUP3888/6/e9/77ypmpubq/DwcE2cOFFJSUle7ffIkSPO37dWq1VRUVE6d+6cCgoKJF0oITZ27Fif30ABAMDfGMENAAC8IjIyUpMnT9Z7772nXr16KTY2Vvn5+crNzVVMTIy6du2qP//5z84RshcLCQnRlClTNHLkSMXHx8tms8k0Td10003617/+5RyJVpqIiAjNnDlTjz32mJo2bSqr1aqgoCDddddd+uSTT5wjvEsTHBys1157TZ988onuv/9+NW/eXA6HQzk5OYqOjlbHjh01ZMgQffnllz5J6j755JOaN2+e+vbtqyuuuELShZHjV1xxhXr37q133323WOLuYgkJCc7vPZlc8lIdO3bUwoULNWDAALVs2VIOh0Omaaply5YaMGCAFi5cqJtuuqnC/VzOpUnqskYhXrwuMjJS1157bYntoqKi9MEHH+j1119Xx44dFRERoZycHNWvX1933XWXPvzwQ/3lL3+pUNwVOZ/Hjx+vYcOGqXPnzmratKkKCgpUUFCgJk2aqFevXvrggw/04osvVii+yjR8+HDNmTNHw4YN029+8xs1adJEpmkqJydHUVFRat26tfr166eZM2fqjTfecKmffal27drp888/V2JiojPxHxMTo759++qrr74qsWZ6kyZN9Pnnn6tPnz5q2LChpAufT7du3fT+++/rySef9Nmxl8VutzvLOVVWgvu6667Tp59+qrvvvlt169aVaZqKiIjQ3XffrVmzZikxMbFS4vCGkydPXvarKMlbWbp166aPPvpIt99+u2rVqiW73a66devq/vvv1+eff67OnTt7tb+YmBhNmjRJSUlJat++vRo0aOC8WXHVVVfpkUce0fz5811+PwAAUF0ZpifFHv3gxIkTWrFihbZt26affvpJO3fu1Pnz59WxY0fNmDGjQvtevXq1pk2bpi1btignJ0exsbFKSEjQoEGDeEwPAIAq4tFHH9XatWs1dOhQDRs2zN/hVClTp07V3//+dzVu3FhLlizxqP42UBX98ssvzgTwkiVL1LRpUz9H5B2rVq1SUlKSrrnmGmf9cQAAAHgmYEqULFiwQGPHjvX6fmfMmKHXX39dpmmqUaNGaty4sfbu3eus0zdz5kwe6QIAAFVWYWGhZs2aJelC/WaS20DVV1Se5NI5CQAAAFB+AZPgjoyM1C233KK2bduqbdu22rFjhyZOnFihfW7btk1jxoyRdKGmX9++fWUYho4fP66nn35a27dv1yuvvKIJEyZ44xAAAAC8yuFw6J133tHhw4cVHh5eobrRACrP1VdfraFDh+q+++7zdygAAAABL2AS3H369FGfPn2cr48fP17hfU6cOFEOh0OJiYku9SpjYmI0fvx43X333Vq8eLF27dql1q1bV7g/AAAAb1i0aJHeeOMNZWZm6ty5c5KkYcOGqV69en6ODIA7vFErHwAAABfU2Ekmz507p+XLl0uS+vbtW2x9ixYt1KlTJ0kqcTIsAAAAf8nJyVFqaqry8/N15ZVXatSoURowYIC/wwIAAACAShcwI7i9befOncrPz1dwcLDatWtXYpsOHTpo5cqV2rJlSyVHBwAALlXRSaWrk/vvv1/333+/v8MAfK5p06bavXu3v8MAAABAFVZjR3AfOHBAkhQbGyub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6/nnn1fz5s114MABjRkzRqtXr9awYcP01VdfqVGjRh7FLl049pycHBmGobCwMI/3U5bc3NxSby7UdDk5OcVeWywBUZ0HAAAAAAAACFgVyQm7q1wJbn8lUM+fPy9JpY7elqTg4GCXtpdTlPS02+1q3ry53n33Xef+W7VqpcmTJ6tnz546ceKEpk+frr/85S8ex19QUKCdO3cqLCxMbdq08Xg/ZTlw4IByc3N9su9Ad+n7smfPHp/daAAAAAAAAADwX0V5W19xO8H94Ycf+jKOMoWEhEgqu8xJfn6+S1t39ylJjzzySLHkeVhYmB588EFNmDBBy5cvr1CC22az6aqrrvLp3Yq4uDhGcJfi7NmzLq+vueYaRUZG+ikaAAAAAAAAoGbYu3evz/twO8HdsWNHX8ZRJnfKj7hTxuRitWrVcn7fsmXLEtsULf/ll1/c2mdpDMNQeHh4hfZxOYxILl3RBJNFwsPDff55AAAAAAAAADWdr8uTSFJAFCJu0aKFJCktLa3UUdyHDx92aXs5V155pfP70kqfFI3yvjRBCgAAAAAAAADwv4BIcMfHx8tmsyk/P19bt24tsc2GDRskSe3bt3drn23atFFoaKgk6ciRIyW2KUqaV2SCSQAAAAAAAACAbwREgjsyMlJdu3aVJM2ZM6fY+oMHD2r16tWSpISEBLf2GRYWpm7dukmSUlJSiq03TVNz586VJHXq1MmTsAEAAAAAAAAAPhQQCW5JGjx4sAzD0Lx58zR79mznhIrp6ekaPny4HA6HevToodatW7ts1717d3Xv3l2LFi0qts+hQ4cqKChI69evV3JysgoLCyVJdrtd//jHP7Rr1y6FhIQoKSnJ58cHAAAAAAAAACifgElwt2vXTiNGjJAkjRo1St26ddPvfvc73XHHHdq+fbvi4uL06quvFtsuNTVVqampysnJKbbuqquu0muvvSar1ap33nlHXbt21QMPPKAuXbro/fffl81m05gxY1zqdQMov+TkZPXs2VPJycn+DgUAAAAAAADVSMAkuCUpKSlJ06ZN06233qrc3Fzt3btXsbGxeuqpp/T555+rXr165d7n7373O82ePVsJCQmyWCzauXOnbDabevfurc8++0y9e/f2wZEANUdeXp5SUlLkcDiUkpKivLw8f4cEAACAGoBBFgAA1AxB/g6gvDp37qzOnTu73X737t2X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IiKiEuW/i0WgoEcPcUJLIiIispTcIQyois2IXffKzeDdaGCenbSOdmq0rOIBtQpoUdkDjnbsNiAiomdb0T9LExFRkVGQj3ey1jcRERFZkzkjdovraOduAZ7oFuBZ2ItBRERkliLXwX38+HGsXr0a58+fR3JyMnx8fNCpUycMHToUrq6uFn1ncHAw1q9fj7CwMGi1WlStWhXdunXD+++/DwcHByu3gIioZCuoxzvNnRyqoOp9ExERUckjj3Y+GvWEo52JiIgKSZHq4F63bh1mzZoFSZJQoUIFVKxYETdu3MDSpUuxZ88ebNiwAWXKlMnXd3799ddYtWoVAKBKlSpwcXHB9evXMW/ePPz9999YtWoVHB0dC6A1RERkbfqTQ0m6DOjXzoy69xQqdUqB1PsmIiKikoujnYmIiApXkbm9fOnSJcyePRsAMGPGDBw8eBBbt27Fvn37UKdOHYSHh2Pq1Kn5+s69e/eKDuwlS5Zg79692L59O/73v/+hUqVKOHXqFBYsWFAQzSEiogJWHGtnEhEREREREZGhItPBvWTJEuh0OnTv3h19+vSBSpVV28zb2xsLFiyAWq3Gnj17EBYWZvZ3/vjjjwCAIUOGoH379uLvNWrUwFdffQUA+PXXX5GQkGDFlhARmW/x4sXo0KEDFi9eXNiLUiSZO5kSERERERERERVNRaKDOykpCf/++y8AoHfv3jler1atGpo1y+q82L17t1nfGRERITrD+/Tpk+P15s2bo2rVqkhPT8f+/fstXXQiIoulpqYiKCgIOp0OQUFBSE1NzftDREREREREREQlSJHo4A4NDUV6ejocHR0RGBho9D2NGjUCAJw/f96s7zx37hwAoHLlyvD29rbKdxJR4Spuo50zMjKg0+kAADqdDhkZGYW8REREREREREREz5Yi0cF969YtAICPjw8cHByMvqdKlSoG781LRESEwees8Z1EVHiKy2hnnU4q7EUgIiIiIiIiIioyVJIkPfO9KT///DO++eYb1KtXD5s3bzb6nkOHDmHo0KFwdXVFSEhInt85ffp0bNiwAZ07d8bChQuNvmfDhg2YPn06/Pz88L///c+iZT979iwkSRId8yqVCk8SU5H5/6MyjXF0sEcpF0dkJD+FpMvM9ftVajvYu7qjMDejrdpkThxbxmKbno02ySRJwr1798S/K1SoYPB6UWpTcko6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EREREREVSezgJiIiIiIiIiIiIqIiiR3cRERERESULydOnIBGo4FGoynsRSEiIiKiEo4d3EREREREVvL06VPUrl0bGo0GK1euNPm+8PBw0UHcrl27XL9z8ODB0Gg06NOnj7UXl4iIiIioyGMHNxERERGRlbi7uyMgIAAAcPLkSZPvO3HihPjv6Oho3Llzx+j7MjIycPbsWQBAs2bNrLikRERERETFAzu4iYiIiIisqGnTpgCA06dPIzMz0+h75M5vLy8vg39nd/HiRSQnJxt8LxERERER/Ycd3EREREREViR3RCcmJuLy5ctG33Pq1CkAWeVHAMMR3frkvzs4OKBhw4bWXlQiIiIioiLPvrAXgIiIiIioOGncuDHs7e2RkZGBkydPIjAw0OD18PBwxMXFoXr16ujcuTPmzp0rOryzk0d216tXD87OzuLvkZGRWLlyJY4dO4Z79+7B3t4eVatWRfv27TFgwAC4ubnl+K4TJ07g/fffBwBcvXoVV65cwcqVK3Hq1CnEx8ejYcOGWLduncFyLlmyBMePH8eTJ09Qvnx5tG3bFsOGDctzHZw/fx5r165FSEgIHjx4ADs7O5QtWxa+vr5o3rw53nzzTVSoUCHvlUlERERElAeO4CYiIiIisqJSpUrhhRdeAGC89Ig8KrtJkybw9vZG1apVER0djaioKIP3abVahISEADAsT/LXX3+hS5cu2LRpE27fvg17e3totVpcuXIFP/zwA7p27Yrw8PBclzE4OBi9e/fGjh07kJSUBDs7O4PX//nnH/To0QM7duxAXFwc7O3t8eDBA6xfvx49evQwWTMcALZu3Yo+ffpgx44diI6OBgDY2dkhJiYGp06dwvfff4+jR4/munxEREREROZiBzcRERERkZXlVodb7vRu0qQJAODFF18EkLNMyYULF3LU3758+TImTpyI9PR0NGzYENu3b8fZs2dx/vx5LF26FF5eXrh79y4++ugjJCUlmVy+SZMmoUWLFvjrr79w5swZXLhwATNnzgQA3Lt3D5988gnS09Oh0Wjw+++/IyQkBOfOncOKFStgZ2eHuXPnGv3elJQUzJw5E5IkoVu3bti7dy8uXryIM2fOICQkBFu2bMHgwYPh6emZr/VJRERERGQKO7iJiIiIiKxM7pBOSkrKUYdbLkcid2zL/599tLf8bycnJzRo0AAAsHDhQmi1WlStWhWrVq2CRqMBAKjVarRr1w4//fQT7O3tERkZiU2bNplcvpo1a2Lp0qWoUaOG+Fu1atUAAMuWLUNiYiLKlCmD1atXixIrarUaL730ElasWIGUlBSj33v9+nUkJSXB1dUVc+bMQZUqVcRrrq6ueOGFFzBx4kS0adPG5LIREREREeUHO7iJiIiIiKysYcOGcHBwAAAcP35c/P3GjRuIi4tDtWrV4O3tDeC/kdzZO7jlEd3169eHo6Mjnjx5gsOHDwPImpzSxcUlR9zatWujQ4cOAICdO3eaXL7BgwfnKEsCAJIkYdeuXQCAt99+2+hIaz8/P7z66qtGv9fd3R1AVnmVR48emYxPRERERGQt7OAmIiIiIrIyFxcX1K1bF4Bhx7XcaS2P2gYAHx8f+Pr64u7du4iMjAQApKen49y5cwAMy5NIkgQAaNGihcnYLVu2BJA1kaRWqzX6noYNGxr9+507d0THdLNmzUzGMPValSpV8Pzzz0Or1aJ379746aefEBoamqNMCxERERGRtbCDm4iIiIioAMgd02fOnEFGRgaAnPW3ZfK/5Q7wCxcuiDIgcmdyQkKCeL88+tsY+bWMjAw8fvzY6HtM1cCOj4/PV4zs7OzssHDhQlSqVAnR0dGYP38+evTogUaNGmHgwIHYsGGDyfImRERERESWYAc3EREREVEBkDu4k5OTcenSJQD/1d/O3sGdfaJJ+f9dXV1FDWxrMlaexFr8/f2xa9cu/PDDD+jTpw/8/PyQmpqKo0ePYvr06Xjttddw9erVAotPRERERCWLfWEvABERERFRcdSwYUM4OjoiPT0dJ0+ehJubG+Lj41GlShVUqFDB4L3Z63DL/69fy7tcuXLi/ffu3TOYwFFfbGwsAMDe3h6lS5fO1zLrj+yOjY3F888/n2sMUxwdHdGxY0d07NgRAPDw4UMEBwdj4cKFuHv3LiZNmoStW7fma9mIiIiIiIzhCG4iIiIiogLg5OSE+vXrA8gakW2s/rascuXKqFChAmJjY3Ht2rUc9bcBoE6dOlCrs9L3Y8eOmYx79OhRAIBGoxGd4+aqVKkSypQpI5bZFP2JM81RtmxZvP322xg/fjwA4MqVK3j48GG+voOIiIiIyBh2cBMRERERFRC5g/rs2bOiUzp7eRKZ3PG9YsUKpKamGnweADw8PNCqVSsAwMqVK43Wsg4LC8OePXsAAF27ds338qpUKnTq1AkAsGnTJoO637IbN24gODjY6OfT09Nz/X4nJyfx33JnPRERERGREswqiYiIiIgKiH4d7gMHDgAw3cEt/33nzp0AgFKlSqFOnToG7xkzZgwcHBxw+/ZtDB48WNSy1ul0OHToEIYMGYKMjAxUqVIFffr0sWiZP/zwQ5QqVQoPHz7EoEGDcPHiRQCAJEk4fPgwhgwZAhcXF6Of3blzJ95++21s2rQJUVFR4u+ZmZn4999/MX/+fABAgwYN8l0+hYiIiIjIGNbgJiIiIiIqIPXq1YOzszNSU1ORmZmJSpUqwcfHx+h75RHcmZmZAIDGjRvD3t4wXa9Tpw7mzZuHiRMn4syZM+jWrRvc3Nyg1WqRlpYGAKhYsSKWLVuGUqVKWbTMPj4+WLBgAUaNGoXQ0FD06tULpUqVQmZmJlJTU+Hl5YVJkyZh8uTJOT4rSRJCQkIQEhICIKsWt6urK548eQKdTgcAKF++PGbNmmXRshERERERZccR3EREREREBcTR0RENGjQQ/zY1ehsAqlevDi8vL/Fv/fIk+jp37oydO3eiT58+qFKlCtLT02FnZ4eAgACMGjUKO3bsQI0aNRQtd9u2bbF161Z06dIFnp6e0Gq18PT0RN++fREUFIRKlSoZ/Vy7du3w9ddfo2fPnvD394e7uzsSExNRqlQpBAYGYvTo0di5c6fi5SMiIiIikqkkSZIKeyGIiIiIiIiIiIiIiPKLI7iJiIiIiIiIiIiIqEhiBzcRERERERERERERFUns4CYiIiIiIiIiIiKiIokd3ERERERERERERERUJLGDm4iIiIiIiIiIiIiKJHZwExEREREREREREVGRxA5uIiIiIiIiIiIiIiqS2MFNREREREREREREREUSO7iJiIiIiIiIiIiIqEhiBzcRERERERERERERFUns4CYiIiIiIiIiIiKiIokd3ERERERERERERERUJLGDm4iIiIiIiIiIiIiKJHZwExEREREREREREVGR9H8NVEZbLf9BiAAAAABJRU5ErkJggg==\n"},"metadata":{}},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# Write your description (2-3 sentences) as a comment here:\n","# The data will be cleaned and comparison between ham and spam will be made.\n","# From there, the analysis between spam and ham of the different words will be done\n","# to see if it can detect spam and ham effectively.\n","# A model will be trained based on this data gathered.\n","\n","# Write the code to generate your visualization here:\n","import re\n","from collections import Counter\n","import sklearn.linear_model as lm\n","import sklearn.metrics as sk\n","\n","pd.set_option('display.max_rows', None)\n","training = pd.read_csv(f'{workspace_path}/train.csv')\n","test = pd.read_csv(f'{workspace_path}/test.csv')\n","\n","import nltk\n","from nltk.corpus import stopwords\n","\n","nltk.download('stopwords')\n","nltk.download('punkt')\n","\n","def remove_stopwords(email):\n","    words = nltk.word_tokenize(email)\n","    english_stopwords = set(stopwords.words('english'))\n","    filtered_words = [word for word in words if word.lower() not in english_stopwords]\n","    filtered_email = ' '.join(filtered_words)\n","    return filtered_email\n","\n","spam_words = ['100%', 'click', 'html', 'offer', 'free', 'would', 'use', 'guaranteed', 'deal',\n","              'insurance', 'receive', 'reply', 'bank', 'business', 'offer', 'url', 'thanks',\n","              'name', 'could', 'really', 'wrote:','think','still','really', 'date:']\n","\n","def cap_count(text):\n","    count = sum(1 for s in text if s.isupper())\n","    if len(text) == 0:\n","      return 0\n","    return count/len(text)\n","\n","def special(text):\n","    count = len(re.sub('[\\w]+', '', text))\n","    return count\n","\n","def re_fw(text):\n","    match = re.search('^re|^fw', text.lower())\n","    if match:\n","        return 1\n","    return 0\n","\n","def num_words(text):\n","    return len(text.split())\n","\n","def clean(data):\n","  data['subject'] = data['subject'].str.replace('Subject: ', '')\n","  data['re_fw'] = data['subject'].astype(str).apply(re_fw)\n","  data['subject_len'] = data['subject'].astype(str).apply(len)\n","  data['s_cap'] = data['subject'].astype(str).apply(cap_count)\n","  data['s_special'] = data['subject'].astype(str).apply(special)\n","  data['email'] = data['email'].apply(remove_stopwords)\n","  data['email_len'] = data['email'].astype(str).apply(len)\n","  data['e_cap'] = data['email'].astype(str).apply(cap_count)\n","  data['e_special'] = data['email'].astype(str).apply(special)\n","  data['e_words'] = data['email'].astype(str).apply(num_words)\n","  word_df = pd.DataFrame(words_in_texts(spam_words, data['email'].astype(str).str.lower()))\n","  word_df['id'] = data['id']\n","  data = data.merge(word_df, on = 'id')\n","  return data\n","\n","training = clean(train)\n","test = clean(test)\n","\n","training.head()\n","\n","train, val = train_test_split(training, test_size=0.2, random_state=42)\n","\n","spam = train[train['spam'] ==1]\n","ham = train[train['spam'] ==0]\n","\n","spam_common = Counter(\" \".join(spam[\"email\"]).lower().split()).most_common(300)\n","ham_common = Counter(\" \".join(ham[\"email\"]).lower().split()).most_common(300)\n","\n","only_spam = list(set(spam_common) - set(ham_common))\n","\n","#visual on features\n","fig = plt.figure(figsize=(5,5))\n","plt.legend()\n","sns.distplot(ham['s_special'], hist = False, label = 'ham').set(xlim = (0,100))\n","sns.distplot(spam['s_special'], hist = False, label = 'spam').set(xlim = (0,100))\n","\n","plt.xlabel('count/prop/value')\n","plt.ylabel('distribution')\n","\n","plt.figure(figsize = (15,6))\n","word_df = train.iloc[:, 12:]\n","word_df['spam'] = train['spam']\n","word_df_melt = word_df.melt('spam')\n","sns.barplot(x = word_df_melt['variable'],\n","            y = word_df_melt['value'],\n","            hue = word_df_melt['spam'],\n","            data = (df.replace({'label':\n","                                {0 : 'Ham',\n","                                 1 : 'Spam'}})\n","                    .melt('label')\n","                    .groupby(['label', 'variable'])\n","                    .mean()\n","                    .reset_index()))\n","plt.ylim([0, 1])\n","plt.xlabel('Words')\n","plt.ylabel('Proportion of Emails')\n","plt.legend(title = \"\")\n","plt.title(\"Frequency of Words in Spam/Ham Emails\")\n","plt.tight_layout()\n","plt.show()\n","\n","bar = train[['spam', 're_fw']].melt('spam')\n","sns.barplot(x = bar['variable'], y = bar['value'], hue = bar['spam'])\n","\n","model = lm.LogisticRegression()\n","X_train = training.iloc[:, 4:]\n","Y_train = training['spam']\n","X_val = val.iloc[:, 4:]\n","Y_val = val['spam']\n","X_test = test.iloc[:, 3:]\n","\n","model.fit(X_train, Y_train)\n","prediction = model.predict(X_val)\n","prediction1 = model.predict(X_train)"]},{"cell_type":"code","source":["plt.figure(figsize=(10, 6))\n","sns.heatmap(df.corr(), annot=True, cmap='coolwarm', fmt=\".2f\")\n","plt.title('Correlation Heatmap of Features')\n","plt.show()"],"metadata":{"id":"Cm7zTWEDW9zB","executionInfo":{"status":"aborted","timestamp":1716297481031,"user_tz":-540,"elapsed":15,"user":{"displayName":"김민경","userId":"05552883468747004724"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(sk.accuracy_score(Y_val, prediction), sk.accuracy_score(Y_train, prediction1))"],"metadata":{"id":"txXR6NwlR0-B","executionInfo":{"status":"aborted","timestamp":1716297481036,"user_tz":-540,"elapsed":19,"user":{"displayName":"김민경","userId":"05552883468747004724"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["train.head()"],"metadata":{"id":"XgXTE9BJTm5q","executionInfo":{"status":"aborted","timestamp":1716297481037,"user_tz":-540,"elapsed":103327,"user":{"displayName":"김민경","userId":"05552883468747004724"}}},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ltSWEnms-c90"},"source":["### Question 8: Precision-Recall Curve\n","\n","We can trade off between precision and recall. In most cases we won't be able to get both perfect precision (i.e. no false positives) and recall (i.e. no false negatives), so we have to compromise.\n","\n","Recall that logistic regression calculates the probability that an example belongs to a certain class.\n","* Then, to classify an example we say that an email is spam if our classifier gives it $\\ge 0.5$ probability of being spam.\n","* However, *we can adjust that cutoff*: we can say that an email is spam only if our classifier gives it $\\ge 0.7$ probability of being spam.\n","\n","This is how we can trade off false positives and false negatives. The precision-recall curve shows this trade off for each possible cutoff probability. In the cell below, [plot a precision-recall curve](http://scikit-learn.org/stable/auto_examples/model_selection/plot_precision_recall.html#plot-the-precision-recall-curve) for your final classifier.\n","\n","<!--\n","BEGIN QUESTION\n","name: q9\n","manual: True\n","points: 3\n","-->\n","<!-- EXPORT TO PDF -->"]},{"cell_type":"code","execution_count":28,"metadata":{"id":"nvi9Qw-U-c90","colab":{"base_uri":"https://localhost:8080/","height":671},"executionInfo":{"status":"ok","timestamp":1716297563111,"user_tz":-540,"elapsed":67,"user":{"displayName":"김민경","userId":"05552883468747004724"}},"outputId":"20c1c433-0076-4f1b-9aca-56b47ba6ddbb"},"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["from sklearn.metrics import precision_recall_curve\n","\n","# Note that you'll want to use the .predict_proba(...) method for your classifier\n","# instead of .predict(...) so you get probabilities, not classes\n","\n","# BEGIN YOUR CODE\n","# -----------------------\n","model = LogisticRegression()\n","model.fit(X_train, Y_train)\n","probability = model.predict_proba(X_train)[:, 1]\n","precision, recall, thresholds = precision_recall_curve(Y_train, probability)\n","plt.figure(figsize=(10, 6))\n","plt.plot(recall, precision, label='Precision-Recall Curve')\n","plt.xlabel('Precision')\n","plt.ylabel('Recall')\n","plt.show()\n","# -----------------------\n","# END YOUR CODE"]},{"cell_type":"markdown","metadata":{"id":"DACE1sh--c90"},"source":["### Congratulations! You have completed HW 3.\n","\n","Make sure you have run all cells in your notebook in order before running the cell below, so that all images/graphs appear in the output.,\n","\n","**Please save before submitting!**\n","\n","Please generate pdf as follows and submit it to Gradescope.\n","\n","**File > Print Preview > Print > Save as pdf**\n","\n","<!-- EXPECT 9 EXPORTED QUESTIONS -->"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"GYp-nNVhYkF2","executionInfo":{"status":"aborted","timestamp":1716297481043,"user_tz":-540,"elapsed":103319,"user":{"displayName":"김민경","userId":"05552883468747004724"}}},"outputs":[],"source":[]}],"metadata":{"colab":{"provenance":[{"file_id":"10QZNdPQgAQAvmi--ALd6DtIye0T6Ev-E","timestamp":1716214938254}],"toc_visible":true},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.10"},"toc":{"base_numbering":1,"nav_menu":{},"number_sections":false,"sideBar":true,"skip_h1_title":false,"title_cell":"Table of Contents","title_sidebar":"Contents","toc_cell":false,"toc_position":{},"toc_section_display":true,"toc_window_display":false}},"nbformat":4,"nbformat_minor":0}